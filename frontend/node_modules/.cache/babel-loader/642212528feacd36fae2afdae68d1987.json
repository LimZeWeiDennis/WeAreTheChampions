{"ast":null,"code":"var _jsxFileName = \"/Users/Douglas/Desktop/govtech/soccer/we-are-the-champions/src/modules/Registration.js\";\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  const [inputText, setInputText] = new useState(\"\");\n  const [teamObject, setTeamObject] = new useState({\n    teamName: \"\",\n    registrationDate: \"\",\n    groupNumber: \"\"\n  });\n\n  const onChangeHandler = event => {\n    setInputText(event.target.value);\n  };\n\n  const registerInput = input => {\n    const inputArray = input.split(\"\\n\"); // split the input string by new space, since string is from input textbox, no need to check if it is string\n\n    for (var i = 0; i < inputArray.length; i++) {\n      const currString = inputArray[i].split(\" \"); // setTeamObject({teamName: currString[0], registrationDate: currString[1], groupNumber: currString[2]});\n\n      console.log(currString); //some function to store the team object;\n    }\n  };\n\n  const onSubmitHandler = () => {\n    registerInput(inputText); // setInputText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: \"Text-Field\",\n      id: \"outlined-multiline-flexible\",\n      label: \"Multiline\",\n      multiline: true,\n      maxRows: 5,\n      value: inputText,\n      onChange: onChangeHandler,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: onSubmitHandler,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","TextField","Button","Registration","inputText","setInputText","teamObject","setTeamObject","teamName","registrationDate","groupNumber","onChangeHandler","event","target","value","registerInput","input","inputArray","split","i","length","currString","console","log","onSubmitHandler"],"sources":["/Users/Douglas/Desktop/govtech/soccer/we-are-the-champions/src/modules/Registration.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\n\nconst Registration = () => {\n    const [inputText, setInputText] = new useState(\"\");\n    const [teamObject, setTeamObject] = new useState({teamName: \"\", registrationDate: \"\", groupNumber: \"\"});\n\n    const onChangeHandler = (event) => {\n        setInputText(event.target.value);\n    }\n\n    const registerInput = (input) => {\n        const inputArray = input.split(\"\\n\");  // split the input string by new space, since string is from input textbox, no need to check if it is string\n\n        for(var i = 0; i < inputArray.length; i ++){\n            const currString = inputArray[i].split(\" \");\n            // setTeamObject({teamName: currString[0], registrationDate: currString[1], groupNumber: currString[2]});\n            console.log(currString);\n            //some function to store the team object;\n        }\n    }\n\n    const onSubmitHandler = () => {\n        registerInput(inputText);\n        // setInputText(\"\");\n    }\n\n\n\n    return (\n        <div>\n            <TextField className=\"Text-Field\" id=\"outlined-multiline-flexible\" label=\"Multiline\" multiline maxRows={5} value={inputText} onChange={onChangeHandler} variant=\"standard\" />\n            <Button variant=\"outlined\" onClick={onSubmitHandler}> Submit </Button>\n        </div>\n        \n    )\n} \n\nexport default Registration;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,MAAMC,YAAY,GAAG,MAAM;EACvB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B,IAAIL,QAAJ,CAAa,EAAb,CAAlC;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8B,IAAIP,QAAJ,CAAa;IAACQ,QAAQ,EAAE,EAAX;IAAeC,gBAAgB,EAAE,EAAjC;IAAqCC,WAAW,EAAE;EAAlD,CAAb,CAApC;;EAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;IAC/BP,YAAY,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACH,CAFD;;EAIA,MAAMC,aAAa,GAAIC,KAAD,IAAW;IAC7B,MAAMC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAY,IAAZ,CAAnB,CAD6B,CACU;;IAEvC,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;MACvC,MAAME,UAAU,GAAGJ,UAAU,CAACE,CAAD,CAAV,CAAcD,KAAd,CAAoB,GAApB,CAAnB,CADuC,CAEvC;;MACAI,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAHuC,CAIvC;IACH;EACJ,CATD;;EAWA,MAAMG,eAAe,GAAG,MAAM;IAC1BT,aAAa,CAACX,SAAD,CAAb,CAD0B,CAE1B;EACH,CAHD;;EAOA,oBACI;IAAA,wBACI,QAAC,SAAD;MAAW,SAAS,EAAC,YAArB;MAAkC,EAAE,EAAC,6BAArC;MAAmE,KAAK,EAAC,WAAzE;MAAqF,SAAS,MAA9F;MAA+F,OAAO,EAAE,CAAxG;MAA2G,KAAK,EAAEA,SAAlH;MAA6H,QAAQ,EAAEO,eAAvI;MAAwJ,OAAO,EAAC;IAAhK;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MAAQ,OAAO,EAAC,UAAhB;MAA2B,OAAO,EAAEa,eAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAjCD;;KAAMrB,Y;AAmCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}