{"ast":null,"code":"import _asyncToGenerator from \"/Users/Douglas/Desktop/govtech/soccer/we-are-the-champions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/Douglas/Desktop/govtech/soccer/we-are-the-champions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Douglas/Desktop/govtech/soccer/we-are-the-champions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Douglas/Desktop/govtech/soccer/we-are-the-champions/src/modules/RecordScore.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState, useEffect } from 'react';\nimport './Registration.css';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nvar RecordScore = function RecordScore() {\n  var _useState = new useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  var _useState3 = new useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasError = _useState4[0],\n      setHasError = _useState4[1];\n\n  var _useState5 = new useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currGoals = _useState6[0],\n      setCurrGoals = _useState6[1];\n\n  var _useState7 = new useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currScores = _useState8[0],\n      setCurrScores = _useState8[1];\n\n  var onChangeHandler = function onChangeHandler(event) {\n    setInputText(event.target.value);\n  };\n\n  var updateCurrGoals = function updateCurrGoals(teams, goals) {\n    var updateValue = _objectSpread({}, currGoals);\n\n    for (var i = 0; i < 2; i++) {\n      if (updateValue[teams[i]] != null) {\n        console.log(updatedValue[teams[i]]);\n        updateValue[teams[i]] += goals[i];\n      } else {\n        updateValue[teams[i]] = goals[i];\n      }\n    }\n\n    setCurrGoals(_objectSpread({}, currGoals, updateValue));\n  };\n\n  var updateCurrScore = function updateCurrScore(teams, scores) {\n    var updateValue = _objectSpread({}, currScores);\n\n    for (var i = 0; i < teams.length; i++) {\n      if (updateValue[teams[i]] != null) {\n        updateValue[teams[i]] += scores[i];\n      } else {\n        updateValue[teams[i]] = scores[i];\n      }\n    }\n\n    setCurrScores(_objectSpread({}, currScores, updateValue));\n  };\n\n  var handleScores = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input) {\n      var scores, i, currGame, firstTeam, secondTeam, firstTeamGoal, secondTeamGoal;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              scores = input.split(\"\\n\");\n              i = 0;\n\n            case 2:\n              if (!(i < scores.length)) {\n                _context.next = 25;\n                break;\n              }\n\n              currGame = scores[i].split(\" \");\n              firstTeam = currGame[0];\n              secondTeam = currGame[1];\n              firstTeamGoal = parseInt(currGame[2]);\n              secondTeamGoal = parseInt(currGame[3]);\n              _context.next = 10;\n              return updateCurrGoals([firstTeam, secondTeam], [firstTeamGoal, secondTeamGoal]);\n\n            case 10:\n              if (!(firstTeamGoal > secondTeamGoal)) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 13;\n              return updateCurrScore([firstTeam], [3]);\n\n            case 13:\n              _context.next = 22;\n              break;\n\n            case 15:\n              if (!(secondTeamGoal > firstTeamGoal)) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.next = 18;\n              return updateCurrScore([secondTeam], [3]);\n\n            case 18:\n              _context.next = 22;\n              break;\n\n            case 20:\n              _context.next = 22;\n              return updateCurrScore([firstTeam, secondTeam], [1, 1]);\n\n            case 22:\n              i++;\n              _context.next = 2;\n              break;\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleScores(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    console.log(currGoals);\n  }, [currGoals]);\n  useEffect(function () {\n    console.log(currScores);\n  }, [currScores]);\n\n  var onSubmitHandler = function onSubmitHandler() {\n    handleScores(inputText);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Registration\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Record the scores!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Instructions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \" Please input the scores in the following format: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 75\n    }\n  }), \"Team1_Name (space) Team2_Name (space) Team1_Goals (space) Team2_Goals \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 88\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 93\n    }\n  }), \"e.g TeamA TeamB 1 2 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 43\n    }\n  }), \"Each input can be separated by a new line(i.e Enter) \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 71\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 76\n    }\n  }), \"Please only enter two teams that are in the same group!\")), /*#__PURE__*/React.createElement(TextField, {\n    className: \"Text-Field\",\n    id: \"outlined-multiline-static\",\n    label: \"Team1 Team2 Goals1 Goal2\",\n    multiline: true,\n    minRows: 5,\n    maxRows: 5,\n    value: inputText,\n    onChange: onChangeHandler,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"Submit\",\n    variant: \"contained\",\n    onClick: onSubmitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \" Submit \")), hasError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"problem la\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default RecordScore;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","RecordScore","inputText","setInputText","hasError","setHasError","currGoals","setCurrGoals","currScores","setCurrScores","onChangeHandler","event","target","value","updateCurrGoals","teams","goals","updateValue","i","console","log","updatedValue","updateCurrScore","scores","length","handleScores","input","split","currGame","firstTeam","secondTeam","firstTeamGoal","parseInt","secondTeamGoal","onSubmitHandler"],"sources":["/Users/Douglas/Desktop/govtech/soccer/we-are-the-champions/src/modules/RecordScore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Registration.css';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\n\nconst RecordScore = () => {\n\n    const [inputText, setInputText] = new useState(\"\");\n    const [hasError, setHasError] = new useState(false);\n    const [currGoals, setCurrGoals] = new useState({});\n    const [currScores, setCurrScores] = new useState({});\n\n    const onChangeHandler = (event) => {\n        setInputText(event.target.value);\n    }\n\n    const updateCurrGoals = (teams, goals) => {\n        const updateValue = {...currGoals};\n        for(var i = 0; i < 2; i ++){\n            if(updateValue[teams[i]] != null){\n                console.log(updatedValue[teams[i]]);\n                updateValue[teams[i]] += goals[i];\n            } else {\n                updateValue[teams[i]] = goals[i];\n            }\n        }\n        \n        setCurrGoals({\n            ...currGoals,\n            ...updateValue\n        });\n    }\n\n    const updateCurrScore = (teams, scores) => {\n        const updateValue = {...currScores};\n        for(var i = 0; i < teams.length; i ++){\n            if(updateValue[teams[i]] != null){\n                updateValue[teams[i]] += scores[i];\n            } else {\n                updateValue[teams[i]] = scores[i];\n            }\n        }\n        \n        setCurrScores({\n            ...currScores,\n            ...updateValue\n        });\n    }\n\n    const handleScores = async(input) => {\n        const scores = input.split(\"\\n\");\n\n        for(var i = 0; i < scores.length; i ++){\n            const currGame = scores[i].split(\" \");\n            const firstTeam = currGame[0];\n            const secondTeam = currGame[1];\n            const firstTeamGoal = parseInt(currGame[2]);\n            const secondTeamGoal = parseInt(currGame[3]);\n\n            await updateCurrGoals([firstTeam, secondTeam], [firstTeamGoal, secondTeamGoal]);\n\n            if(firstTeamGoal > secondTeamGoal){\n                await updateCurrScore([firstTeam], [3]);\n            } else if(secondTeamGoal > firstTeamGoal){\n                await updateCurrScore([secondTeam], [3]);\n            } else {\n                await updateCurrScore([firstTeam, secondTeam], [1 , 1]);\n            }\n        }\n    }\n\n    useEffect(() => {\n        console.log(currGoals);\n    }, [currGoals]);\n\n    useEffect(() => {\n        console.log(currScores);\n    }, [currScores]);\n\n    const onSubmitHandler = () => {\n        handleScores(inputText);\n    }\n\n\n    return (\n        <div className=\"Registration\" >\n            <h1>Record the scores!</h1>\n            <div className=\"Instructions\">\n                \n                <p> Please input the scores in the following format: <br/><br/>\n                 Team1_Name (space) Team2_Name (space) Team1_Goals (space) Team2_Goals <br/><br/>\n                 e.g TeamA TeamB 1 2 <br/><br/>\n                 Each input can be separated by a new line(i.e Enter) <br/><br/>\n                 Please only enter two teams that are in the same group!\n                 </p>\n            </div>\n \n            <TextField className=\"Text-Field\" \n                       id=\"outlined-multiline-static\" \n                       label=\"Team1 Team2 Goals1 Goal2\" \n                       multiline \n                       minRows={5}\n                       maxRows={5} \n                       value={inputText} \n                       onChange={onChangeHandler} \n                       variant=\"outlined\" />\n\n            <div className=\"Buttons\">\n                <Button className=\"Submit\" variant=\"contained\" onClick={onSubmitHandler}> Submit </Button>\n            </div>\n\n            {hasError \n                ?\n                    <p>problem la</p>\n                \n                :\n                    <div>\n                        \n                    </div>\n            }\n        </div>\n\n    )\n\n}\n\nexport default RecordScore;"],"mappings":";;;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EAAA,gBAEY,IAAIJ,QAAJ,CAAa,EAAb,CAFZ;EAAA;EAAA,IAEfK,SAFe;EAAA,IAEJC,YAFI;;EAAA,iBAGU,IAAIN,QAAJ,CAAa,KAAb,CAHV;EAAA;EAAA,IAGfO,QAHe;EAAA,IAGLC,WAHK;;EAAA,iBAIY,IAAIR,QAAJ,CAAa,EAAb,CAJZ;EAAA;EAAA,IAIfS,SAJe;EAAA,IAIJC,YAJI;;EAAA,iBAKc,IAAIV,QAAJ,CAAa,EAAb,CALd;EAAA;EAAA,IAKfW,UALe;EAAA,IAKHC,aALG;;EAOtB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;IAC/BR,YAAY,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACH,CAFD;;EAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAkB;IACtC,IAAMC,WAAW,qBAAOX,SAAP,CAAjB;;IACA,KAAI,IAAIY,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;MACvB,IAAGD,WAAW,CAACF,KAAK,CAACG,CAAD,CAAN,CAAX,IAAyB,IAA5B,EAAiC;QAC7BC,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACN,KAAK,CAACG,CAAD,CAAN,CAAxB;QACAD,WAAW,CAACF,KAAK,CAACG,CAAD,CAAN,CAAX,IAAyBF,KAAK,CAACE,CAAD,CAA9B;MACH,CAHD,MAGO;QACHD,WAAW,CAACF,KAAK,CAACG,CAAD,CAAN,CAAX,GAAwBF,KAAK,CAACE,CAAD,CAA7B;MACH;IACJ;;IAEDX,YAAY,mBACLD,SADK,EAELW,WAFK,EAAZ;EAIH,CAfD;;EAiBA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD,EAAQQ,MAAR,EAAmB;IACvC,IAAMN,WAAW,qBAAOT,UAAP,CAAjB;;IACA,KAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACS,MAAzB,EAAiCN,CAAC,EAAlC,EAAsC;MAClC,IAAGD,WAAW,CAACF,KAAK,CAACG,CAAD,CAAN,CAAX,IAAyB,IAA5B,EAAiC;QAC7BD,WAAW,CAACF,KAAK,CAACG,CAAD,CAAN,CAAX,IAAyBK,MAAM,CAACL,CAAD,CAA/B;MACH,CAFD,MAEO;QACHD,WAAW,CAACF,KAAK,CAACG,CAAD,CAAN,CAAX,GAAwBK,MAAM,CAACL,CAAD,CAA9B;MACH;IACJ;;IAEDT,aAAa,mBACND,UADM,EAENS,WAFM,EAAb;EAIH,CAdD;;EAgBA,IAAMQ,YAAY;IAAA,sEAAG,iBAAMC,KAAN;MAAA;MAAA;QAAA;UAAA;YAAA;cACXH,MADW,GACFG,KAAK,CAACC,KAAN,CAAY,IAAZ,CADE;cAGTT,CAHS,GAGL,CAHK;;YAAA;cAAA,MAGFA,CAAC,GAAGK,MAAM,CAACC,MAHT;gBAAA;gBAAA;cAAA;;cAIPI,QAJO,GAIIL,MAAM,CAACL,CAAD,CAAN,CAAUS,KAAV,CAAgB,GAAhB,CAJJ;cAKPE,SALO,GAKKD,QAAQ,CAAC,CAAD,CALb;cAMPE,UANO,GAMMF,QAAQ,CAAC,CAAD,CANd;cAOPG,aAPO,GAOSC,QAAQ,CAACJ,QAAQ,CAAC,CAAD,CAAT,CAPjB;cAQPK,cARO,GAQUD,QAAQ,CAACJ,QAAQ,CAAC,CAAD,CAAT,CARlB;cAAA;cAAA,OAUPd,eAAe,CAAC,CAACe,SAAD,EAAYC,UAAZ,CAAD,EAA0B,CAACC,aAAD,EAAgBE,cAAhB,CAA1B,CAVR;;YAAA;cAAA,MAYVF,aAAa,GAAGE,cAZN;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAaHX,eAAe,CAAC,CAACO,SAAD,CAAD,EAAc,CAAC,CAAD,CAAd,CAbZ;;YAAA;cAAA;cAAA;;YAAA;cAAA,MAcHI,cAAc,GAAGF,aAdd;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAeHT,eAAe,CAAC,CAACQ,UAAD,CAAD,EAAe,CAAC,CAAD,CAAf,CAfZ;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA,OAiBHR,eAAe,CAAC,CAACO,SAAD,EAAYC,UAAZ,CAAD,EAA0B,CAAC,CAAD,EAAK,CAAL,CAA1B,CAjBZ;;YAAA;cAGiBZ,CAAC,EAHlB;cAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAZO,YAAY;MAAA;IAAA;EAAA,GAAlB;;EAsBA3B,SAAS,CAAC,YAAM;IACZqB,OAAO,CAACC,GAAR,CAAYd,SAAZ;EACH,CAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;EAIAR,SAAS,CAAC,YAAM;IACZqB,OAAO,CAACC,GAAR,CAAYZ,UAAZ;EACH,CAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;EAIA,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1BT,YAAY,CAACvB,SAAD,CAAZ;EACH,CAFD;;EAKA,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADJ,eAEI;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sEAAqD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAArD,eAA0D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAA1D,yFACuE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADvE,eAC4E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAD5E,uCAEqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFrB,eAE0B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAF1B,wEAGsD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHtD,eAG2D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAH3D,4DAFJ,CAFJ,eAYI,oBAAC,SAAD;IAAW,SAAS,EAAC,YAArB;IACW,EAAE,EAAC,2BADd;IAEW,KAAK,EAAC,0BAFjB;IAGW,SAAS,MAHpB;IAIW,OAAO,EAAE,CAJpB;IAKW,OAAO,EAAE,CALpB;IAMW,KAAK,EAAEA,SANlB;IAOW,QAAQ,EAAEQ,eAPrB;IAQW,OAAO,EAAC,UARnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZJ,eAsBI;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IAAQ,SAAS,EAAC,QAAlB;IAA2B,OAAO,EAAC,WAAnC;IAA+C,OAAO,EAAEwB,eAAxD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cADJ,CAtBJ,EA0BK9B,QAAQ,gBAED;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAFC,gBAKD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EA/BZ,CADJ;AAwCH,CAvHD;;AAyHA,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}